---

- include_tasks: "setup-{{ ansible_os_family }}.yml"

- name: Download source
  get_url: url="{{ pyfsrc_download_url }}" dest="{{ pyfsrc_src_pkg_path }}"

- name: Unarchive source
  unarchive:
    src: "{{ pyfsrc_src_pkg_path }}"
    dest: "{{ pyfsrc_download_dir }}"
    creates: "{{ pyfsrc_src_dir_path }}"
    copy: no

- name: Configure package
  command: "./configure --prefix={{ pyfsrc_install_path }}"
  args:
    chdir: "{{ pyfsrc_src_dir_path }}"

- name: Cleanup for build
  command: make clean
  args:
    chdir: "{{ pyfsrc_src_dir_path }}"

- name: Compile source
  command: make
  args:
    chdir: "{{ pyfsrc_src_dir_path }}"

- name: Install as default interpreter
  command: make install
  args:
    chdir: "{{ pyfsrc_src_dir_path }}"
  when: pyfsrc_make_default
  become: yes

- name: Install as alternative interpreter
  command: make altinstall
  args:
    chdir: "{{ pyfsrc_src_dir_path }}"
  when: not pyfsrc_make_default
  become: yes
  become_user: "{{ pyfsrc_user }}"

- name: Clean up build folder and archive
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - "{{ pyfsrc_src_pkg_path }}"
    - "{{ pyfsrc_src_dir_path }}"
  when: pyfsrc_cleanup_downloads
